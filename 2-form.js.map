{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Оголоси поза будь-якими функціями об’єкт formData з полями email та message, які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n// Використовуй метод делегування для відстеження змін у формі через подію input.Зберігай актуальні дані з полів email та message\n// у formData та записуй цей об’єкт у локальне сховище.Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі.\n//  Якщо так, використовуй їх для заповнення форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n// Перед відправленням форми переконайся, що обидва поля форми заповнені.Якщо будь - яке з полів(властивостей об’єкта formData) порожнє,\n//     показуй сповіщення з текстом «Fill please all fields». Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями,\n//         очисти локальне сховище, об’єкт formData і поля форми.\n\nconst formData = {\n    email: \"${email.value}\",\n    message: \"${message.velue}\",\n};\n\nconst refs = {\n    email: document.querySelector(`.email-js`),\n    message: document.querySelector(`.message-js`),\n}\n\nemail.addEventListener(`input`, onInputChange);\nmessage.addEventListener(`input`, onInputChange);\n\nfunction onInputChange() {\n    console.log(formData);\n}\n\n"],"names":["formData","onInputChange"],"mappings":"oDASA,MAAMA,EAAW,CACb,MAAO,iBACP,QAAS,kBACb,EAGW,SAAS,cAAc,WAAW,EAChC,SAAS,cAAc,aAAa,EAGjD,MAAM,iBAAiB,QAASC,CAAa,EAC7C,QAAQ,iBAAiB,QAASA,CAAa,EAE/C,SAASA,GAAgB,CACrB,QAAQ,IAAID,CAAQ,CACxB"}